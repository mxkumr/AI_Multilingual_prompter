{
  "en": "def getValueFromArray(arr, size, index):\n    return arr[index]\n\ndef main():\n    id_sequence = [1, 2, 3, 4, 5]\n    index = int(input())\n    size = len(id_sequence)\n    return getValueFromArray(id_sequence, size, index)\n\nif __name__ == \"__main__\":\n    exit_code = main()\n    import sys\n    sys.exit(exit_code)",
  "zh-CN": "import sys\n\ndef getValueFromArray(arr, size, index):\n    return arr[index]\n\ndef main():\n    arr = list(map(int, sys.stdin.read().split()))\n    size = len(arr)\n    index = size\n    print(getValueFromArray(arr, size, index))\n\nif __name__ == \"__main__\":\n    main()",
  "hi": "def getValueFromArray(arr, index):\n    return arr[index]\n\ndef main():\n    size = int(input())\n    arr = [int(input()) for _ in range(size)]\n    index = int(input())\n    print(getValueFromArray(arr, index))\n\nif __name__ == \"__main__\":\n    main()",
  "es": "import sys\n\ndef getValueFromArray(arr, size, index):\n    return arr[index]\n\nif __name__ == \"__main__\":\n    index = int(input())\n    ID_SECHENCIA = [10, 20, 30, 40, 50]\n    size = len(ID_SECHENCIA)\n    value = getValueFromArray(ID_SECHENCIA, size, index)\n    sys.exit(value)",
  "ar": "def getValueFromarray(arr, index):\n    return arr[index]\n\ndef main():\n    import sys\n    arr = list(map(int, sys.stdin.read().split()))\n    index = int(input())\n    result = getValueFromarray(arr, index)\n    sys.exit(result)\n\nif __name__ == \"__main__\":\n    main()",
  "fr": "import sys\n\nID_Sequence = [10, 20, 30, 40, 50]\n\ndef GetValueFromArray(arr, size, index):\n    return arr[index]\n\ndef main():\n    index = int(input())\n    value = GetValueFromArray(ID_Sequence, len(ID_Sequence), index)\n    return value\n\nif __name__ == \"__main__\":\n    sys.exit(main())",
  "bn": "def GetValuefromarray(arr, index):\n    return arr[index]\n\ndef main():\n    array = list(map(int, input().split()))\n    index = int(input())\n    print(GetValuefromarray(array, index))\n\nif __name__ == \"__main__\":\n    main()",
  "pt": "import sys\n\nID_SEFENCE = [10, 20, 30, 40, 50]\n\ndef getValueFromArray(arr, size, index):\n    return arr[index]\n\ndef main():\n    index = int(input())\n    result = getValueFromArray(ID_SEFENCE, len(ID_SEFENCE), index)\n    sys.exit(result)\n\nif __name__ == \"__main__\":\n    main()",
  "ru": "def GetValueFromarray(arr, size, index):\n    return arr[index]\n\ndef main():\n    import sys\n    id_sequence = [1, 2, 3, 4, 5]\n    size = len(id_sequence)\n    index = int(sys.stdin.readline())\n    result = GetValueFromarray(id_sequence, size, index)\n    sys.exit(result)\n\nif __name__ == \"__main__\":\n    main()",
  "id": "import sys\n\nID_SECTERENCE = [10, 20, 30, 40, 50]\n\ndef getValuefromArray(arr, size, index):\n    return arr[index]\n\ndef main():\n    index = int(input())\n    result = getValuefromArray(ID_SECTERENCE, len(ID_SECTERENCE), index)\n    sys.exit(result)\n\nif __name__ == \"__main__\":\n    main()",
  "ur": "import sys\n\ndef getValuefromarray(arr, index):\n    return arr[index]\n\ndef main():\n    index = int(input())\n    arr = [1, 2, 3, 4, 5]\n    value = getValuefromarray(arr, index)\n    sys.exit(value)\n\nif __name__ == \"__main__\":\n    main()",
  "de": "def getValueFromarray(array, size, index):\n    return array[index]\n\ndef main():\n    id_sequence = [10, 20, 30, 40, 50]\n    size = len(id_sequence)\n    index = int(input())\n    exit_code = getValueFromarray(id_sequence, size, index)\n    import sys\n    sys.exit(exit_code)\n\nif __name__ == \"__main__\":\n    main()",
  "ja": "def GetValueFromArray(arr, size, index):\n    return arr[index]\n\ndef main():\n    import sys\n    index = int(sys.stdin.read())\n    ID_Sequence = [1, 2, 3, 4, 5]\n    size = len(ID_Sequence)\n    value = GetValueFromArray(ID_Sequence, size, index)\n    exit(value)\n\nif __name__ == \"__main__\":\n    main()",
  "mr": "def getValueFromarray(arr, index):\n    return arr[index]\n\ndef main():\n    import sys\n    size = int(sys.stdin.readline())\n    arr = [int(input()) for _ in range(size)]\n    index = int(input())\n    sys.exit(getValueFromarray(arr, index))\n\nif __name__ == \"__main__\":\n    main()",
  "vi": "import sys\n\ndef getValueFromArray(array, size, index):\n    return array[index]\n\ndef main():\n    index = int(input())\n    value = getValueFromArray(ID_Sequence, len(ID_Sequence), index)\n    sys.exit(value)\n\nif __name__ == \"__main__\":\n    ID_Sequence = [10, 20, 30, 40, 50]\n    main()",
  "te": "def getValueFromarray(arr, size, index):\n    return arr[index]\n\ndef main():\n    index = int(input())\n    arr = list(map(int, input().split()))\n    size = len(arr)\n    print(getValueFromarray(arr, size, index))\n\nif __name__ == \"__main__\":\n    main()",
  "ha": "import json\nfrom collections import defaultdict\n\ndef process_lamba(data, ma_anar, gano, envalufromaray):\n    grouped = defaultdict(list)\n    for item in data:\n        key = (item['ID'], item['ID_se'])\n        grouped[key].append(item)\n    result = []\n    for key, group in grouped.items():\n        total = sum(item[ma_anar] for item in group)\n        avg = total / len(group)\n        result.append({\n            'ID': key[0],\n            'ID_se': key[1],\n            'Gano': gano,\n            'Envalufromaray': envalufromaray,\n            'Total': total,\n            'Average': avg\n        })\n    return json.dumps(result, indent=2)",
  "tr": "ID_REXENCE = [10, 20, 30, 40]\n\ndef GetValueFromArray(arr, index):\n    return arr[index]\n\ndef main():\n    index = int(input())\n    print(GetValueFromArray(ID_REXENCE, index))\n\nif __name__ == \"__main__\":\n    main()"
}