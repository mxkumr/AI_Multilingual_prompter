{
  "en": "import random\n\ndef getMonthlySales():\n    return random.randint(0, 100000)\n\nq1 = q2 = q3 = q4 = 0\nfor i in range(12):\n    sales = getMonthlySales()\n    if i < 3:\n        q1 += sales\n    elif i < 6:\n        q2 += sales\n    elif i < 9:\n        q3 += sales\n    else:\n        q4 += sales\n\nprint(f\"Q1: {q1}, Q2: {q2}, Q3: {q3}, Q4: {q4}\")",
  "zh-CN": "import random\n\ndef GetMonthlysales():\n    return random.randint(0, 100000)\n\nmonthly_sales = [GetMonthlysales() for _ in range(12)]\n\nq1 = sum(monthly_sales[0:3])\nq2 = sum(monthly_sales[3:6])\nq3 = sum(monthly_sales[6:9])\nq4 = sum(monthly_sales[9:12])\n\nprint(\"Q1 Sales:\", q1)\nprint(\"Q2 Sales:\", q2)\nprint(\"Q3 Sales:\", q3)\nprint(\"Q4 Sales:\", q4)",
  "hi": "import random\n\ndef getMonthlySales():\n    return random.randint(0, 100000)\n\nsales = [getMonthlySales() for _ in range(12)]\nquarter_sums = [sum(sales[0:3]), sum(sales[3:6]), sum(sales[6:9]), sum(sales[9:12])]\n\nfor i, total in enumerate(quarter_sums):\n    print(f\"Quarter {i+1} total sales: {total}\")",
  "es": "import random\n\ndef getMonthlySales():\n    return random.randint(0, 100000)\n\nsales = [getMonthlySales() for _ in range(12)]\n\nq1 = sum(sales[0:3])\nq2 = sum(sales[3:6])\nq3 = sum(sales[6:9])\nq4 = sum(sales[9:12])\n\nprint(f\"Ventas primer trimestre: {q1}\")\nprint(f\"Ventas segundo trimestre: {q2}\")\nprint(f\"Ventas tercer trimestre: {q3}\")\nprint(f\"Ventas cuarto trimestre: {q4}\")",
  "ar": "import random\n\ndef getMonthlySales():\n    return random.randint(0, 100000)\n\nquarterly_sales = [0, 0, 0]\n\nfor i in range(12):\n    sales = getMonthlySales()\n    if i % 3 == 0:\n        quarterly_sales[0] += sales\n    elif i % 3 == 1:\n        quarterly_sales[1] += sales\n    else:\n        quarterly_sales[2] += sales\n\nprint(\"First Quarter Sales:\", quarterly_sales[0])\nprint(\"Second Quarter Sales:\", quarterly_sales[1])\nprint(\"Third Quarter Sales:\", quarterly_sales[2])",
  "fr": "import random\n\ndef GetMonthlySales():\n    return random.randint(0, 100000)\n\nmonthly_sales = [GetMonthlySales() for _ in range(12)]\nq1 = sum(monthly_sales[0:3])\nq2 = sum(monthly_sales[3:6])\nq3 = sum(monthly_sales[6:9])\nq4 = sum(monthly_sales[9:12])\nprint(f\"Q1: {q1}, Q2: {q2}, Q3: {q3}, Q4: {q4}\")",
  "bn": "import random\n\ndef GetMonthlySales():\n    return random.randint(0, 100000)\n\nsum_sales = 0\nfor i in range(12):\n    sales = GetMonthlySales()\n    sum_sales += sales\n    if (i + 1) % 3 == 0:\n        print(f\"Quarter {i//3 + 1} total: {sum_sales}\")\n        sum_sales = 0",
  "pt": "import random\n\ndef GetMonthlySales():\n    return random.randint(0, 100000)\n\nmonthly_sales = [GetMonthlySales() for _ in range(12)]\nq1 = sum(monthly_sales[0:3])\nq2 = sum(monthly_sales[3:6])\nq3 = sum(monthly_sales[6:9])\nq4 = sum(monthly_sales[9:12])\nprint(f\"Q1: {q1}, Q2: {q2}, Q3: {q3}, Q4: {q4}\")",
  "ru": "import random\n\ndef getMonthlySales():\n    return random.randint(0, 100000)\n\nsales = []\nfor _ in range(12):\n    sales.append(getMonthlySales())\n\nquarterly_sales = [\n    sum(sales[0:3]),\n    sum(sales[3:6]),\n    sum(sales[6:9]),\n    sum(sales[9:12])\n]\n\nfor q in quarterly_sales:\n    print(q)",
  "id": "import random\n\ndef GetMonthlysales():\n    return random.randint(0, 100000)\n\nsales = [GetMonthlysales() for _ in range(12)]\n\nquarter1 = sum(sales[0:3])\nquarter2 = sum(sales[3:6])\nquarter3 = sum(sales[6:9])\nquarter4 = sum(sales[9:12])\n\nprint(\"Quarter 1 sales:\", quarter1)\nprint(\"Quarter 2 sales:\", quarter2)\nprint(\"Quarter 3 sales:\", quarter3)\nprint(\"Quarter 4 sales:\", quarter4)",
  "ur": "import random\n\ndef getmonthlysales():\n    return random.randint(0, 100000)\n\nq1 = q2 = q3 = q4 = 0\n\nfor month in range(1, 13):\n    sales = getmonthlysales()\n    if month <= 3:\n        q1 += sales\n    elif month <= 6:\n        q2 += sales\n    elif month <= 9:\n        q3 += sales\n    else:\n        q4 += sales\n\nprint(f\"Q1: {q1}, Q2: {q2}, Q3: {q3}, Q4: {q4}\")",
  "de": "import random\n\ndef GetMonthlySales():\n    return random.randint(0, 100000)\n\nsales = [GetMonthlySales() for _ in range(12)]\n\nquarter1 = sum(sales[0:3])\nquarter2 = sum(sales[3:6])\nquarter3 = sum(sales[6:9])\nquarter4 = sum(sales[9:12])\n\nprint(\"Quartal 1 Umsatz:\", quarter1)\nprint(\"Quartal 2 Umsatz:\", quarter2)\nprint(\"Quartal 3 Umsatz:\", quarter3)\nprint(\"Quartal 4 Umsatz:\", quarter4)",
  "ja": "import random\n\ndef GetMonthlySales():\n    return random.randint(0, 100000)\n\nq1 = q2 = q3 = q4 = 0\nfor month in range(12):\n    sales = GetMonthlySales()\n    q = (month // 3) + 1\n    if q == 1:\n        q1 += sales\n    elif q == 2:\n        q2 += sales\n    elif q == 3:\n        q3 += sales\n    else:\n        q4 += sales\n\nprint(f\"Q1: {q1}\")\nprint(f\"Q2: {q2}\")\nprint(f\"Q3: {q3}\")\nprint(f\"Q4: {q4}\")",
  "mr": "import random\n\ndef get_monthly_sales():\n    return random.randint(0, 100000)\n\nq1 = q2 = q3 = q4 = 0\nfor month in range(1, 13):\n    sales = get_monthly_sales()\n    if 1 <= month <= 3:\n        q1 += sales\n    elif 4 <= month <= 6:\n        q2 += sales\n    elif 7 <= month <= 9:\n        q3 += sales\n    else:\n        q4 += sales\n\nprint(\"Q1:\", q1)\nprint(\"Q2:\", q2)\nprint(\"Q3:\", q3)\nprint(\"Q4:\", q4)",
  "vi": "import random\n\ndef getmonthlysales():\n    return random.randint(0, 100000)\n\nsales = [getmonthlysales() for _ in range(12)]\n\nfor i in range(4):\n    start = i * 3\n    quarter_sum = sum(sales[start:start+3])\n    print(f\"Quý {i+1} doanh số: {quarter_sum}\")",
  "te": "import random\n\ndef GetMonthlySales():\n    return random.randint(0, 100000)\n\nmonthly_sales = [GetMonthlySales() for _ in range(12)]\n\nquarterly_totals = [\n    sum(monthly_sales[0:3]),\n    sum(monthly_sales[3:6]),\n    sum(monthly_sales[6:9]),\n    sum(monthly_sales[9:12])\n]\n\nfor i, total in enumerate(quarterly_totals, 1):\n    print(f\"Quarter {i} Total: {total}\")",
  "ha": "with open('Getmonthysales') as f:\n    sales = [int(line.strip()) for line in f]\n\nq1 = sum(sales[0:3])\nq2 = sum(sales[3:6])\nq3 = sum(sales[6:9])\nq4 = sum(sales[9:12])\n\nquarters = [q1, q2, q3, q4]\nmax_val = max(quarters)\nmax_index = quarters.index(max_val)\n\nprint(f\"Q1 Total: {q1}\")\nprint(f\"Q2 Total: {q2}\")\nprint(f\"Q3 Total: {q3}\")\nprint(f\"Q4 Total: {q4}\")\nprint(f\"Highest Quarter: Q{max_index + 1}\")",
  "tr": "import random\n\ndef GetMonthlySales():\n    return random.randint(0, 100000)\n\nsales = [GetMonthlySales() for _ in range(12)]\nq1 = sum(sales[0:3])\nq2 = sum(sales[3:6])\nq3 = sum(sales[6:9])\nq4 = sum(sales[9:12])\n\nprint(f\"1. Çeyrek Satışları: {q1}\")\nprint(f\"2. Çeyrek Satışları: {q2}\")\nprint(f\"3. Çeyrek Satışları: {q3}\")\nprint(f\"4. Çeyrek Satışları: {q4}\")"
}