{
  "en": "def getValueFromArray(arr, size, index):\n    return arr[index]\n\ndef main():\n    import sys\n    try:\n        n = int(sys.stdin.readline())\n        arr = list(map(int, sys.stdin.readline().split()))\n        if len(arr) != n:\n            print(\"Invalid input\")\n            return\n        index = int(sys.stdin.readline())\n        result = getValueFromArray(arr, n, index)\n        print(result)\n    except:\n        print(\"Error\")\n\nif __name__ == \"__main__\":\n    main()",
  "zh-CN": "import sys\n\ndef getValueFromArray(arr, size, index):\n    return arr[index]\n\ndef main():\n    arr = list(map(int, input().split()))\n    index = int(input())\n    value = getValueFromArray(arr, len(arr), index)\n    sys.exit(value)\n\nif __name__ == \"__main__\":\n    main()",
  "hi": "def getValueFromArray(arr, index):\n    return arr[index]\n\ndef main():\n    index = int(input())\n    arr = [10, 20, 30, 40, 50]\n    print(getValueFromArray(arr, index))\n\nif __name__ == \"__main__\":\n    main()",
  "es": "def getValueFromArray(arr, size, index):\n    return arr[index]\n\ndef main():\n    import sys\n    array = list(map(int, sys.stdin.readline().split()))\n    index = int(sys.stdin.readline())\n    size = len(array)\n    value = getValueFromArray(array, size, index)\n    return value\n\nif __name__ == \"__main__\":\n    exit(main())",
  "ar": "def getValueFromarray(arr, size, index):\n    return arr[index]\n\ndef main():\n    import sys\n    data = list(map(int, sys.stdin.read().split()))\n    arr = data[:-1]\n    index = data[-1]\n    result = getValueFromarray(arr, len(arr), index)\n    exit(result)\n\nif __name__ == \"__main__\":\n    main()",
  "fr": "def GetValueFromArray(arr, size, index):\n    return arr[index]\n\ndef main():\n    import sys\n    arr = list(map(int, sys.stdin.readline().split()))\n    index = int(sys.stdin.readline())\n    value = GetValueFromArray(arr, len(arr), index)\n    sys.exit(value)\n\nif __name__ == \"__main__\":\n    main()",
  "bn": "def GetValuefromarray(arr, index):\n    return arr[index]\n\ndef main():\n    index = int(input())\n    arr = [10, 20, 3, 4]\n    print(GetValuefromarray(arr, index))\n\nif __name__ == \"__main__\":\n    main()",
  "pt": "import sys\n\ndef getValueFromArray(arr, size, index):\n    return arr[index]\n\ndef main():\n    index = int(input())\n    arr = [1, 2, 3, 4, 5]\n    size = len(arr)\n    result = getValueFromArray(arr, size, index)\n    sys.exit(result)\n\nif __name__ == \"__main__\":\n    main()",
  "ru": "def GetValueFromarray(arr, size, index):\n    return arr[index]\n\ndef main():\n    size = int(input())\n    arr = list(map(int, input().split()))\n    index = int(input())\n    result = GetValueFromarray(arr, size, index)\n    print(result)\n\nif __name__ == \"__main__\":\n    main()",
  "id": "import sys\n\ndef getValuefromArray(array, size, index):\n    return array[index]\n\ndef main():\n    index = int(input())\n    array = [1, 2, 3, 4, 5]\n    size = len(array)\n    result = getValuefromArray(array, size, index)\n    sys.exit(result)\n\nif __name__ == \"__main__\":\n    main()",
  "ur": "import sys\n\ndef getValueFromArray(arr, index):\n    return arr[index]\n\ndef main():\n    index = int(input())\n    arr = [1, 2, 3, 4, 5]\n    value = getValueFromArray(arr, index)\n    sys.exit(value)\n\nif __name__ == \"__main__\":\n    main()",
  "de": "def getValueFromarray(arr, size, index):\n    return arr[index]\n\ndef main():\n    index = int(input())\n    arr = list(map(int, input().split()))\n    size = len(arr)\n    result = getValueFromarray(arr, size, index)\n    exit(result)\n\nif __name__ == \"__main__\":\n    main()",
  "ja": "import sys\n\ndef GetValueFromArray(arr, size, index):\n    return arr[index]\n\ndef main():\n    arr = list(map(int, input().split()))\n    size = len(arr)\n    index = int(input())\n    value = GetValueFromArray(arr, size, index)\n    sys.exit(value)\n\nif __name__ == \"__main__\":\n    main()",
  "mr": "def getValueFromArray(arr, index):\n    return arr[index]\n\ndef main():\n    import sys\n    arr = list(map(int, sys.stdin.read().split()))\n    index = int(input())\n    exit_code = getValueFromArray(arr, index)\n    sys.exit(exit_code)",
  "vi": "def getValueFromArray(arr, size, index):\n    return arr[index]\n\ndef main():\n    import sys\n    index = int(sys.stdin.readline())\n    arr = [1, 2, 3, 4, 5]\n    size = len(arr)\n    value = getValueFromArray(arr, size, index)\n    sys.exit(value)\n\nif __name__ == \"__main__\":\n    main()",
  "te": "import sys\n\ndef getValueFromarray(arr, index):\n    return arr[index]\n\ndef main():\n    index = int(input())\n    arr = [10, 20, 30, 40, 50]\n    value = getValueFromarray(arr, index)\n    sys.exit(value)\n\nif __name__ == \"__main__\":\n    main()",
  "ha": "def compound_interest(principal, rate, time, compounding_periods):\n    amount = principal * (1 + rate/compounding_periods) ** (compounding_periods * time)\n    return amount\n\nprincipal = float(input(\"Enter principal amount: \"))\nannual_rate = float(input(\"Enter annual interest rate (as a decimal): \"))\ntime_years = float(input(\"Enter time in years: \"))\ncompounding = int(input(\"Enter number of compounding periods per year: \"))\n\nfuture_value = compound_interest(principal, annual_rate, time_years, compounding)\nprint(f\"Future value: {future_value:.2f}\")",
  "tr": "def GetValueFromArray(arr, index):\n    return arr[index]\n\ndef main():\n    index = int(input())\n    arr = [10, 20, 30, 40, 50]\n    print(GetValueFromArray(arr, index))\n\nif __name__ == \"__main__\":\n    main()"
}